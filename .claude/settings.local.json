{
  "permissions": {
    "allow": [
      "Bash(go build -o migrate.exe run_migration.go)",
      "Bash(./migrate.exe)",
      "Bash(go build -o migrate.exe ./migrations/run_migration.go)",
      "Bash(go build -o nat-supabase.exe ./cmd)",
      "Bash(netstat -ano)",
      "Bash(awk '{print $NF}')",
      "Bash(xargs -I {} taskkill //PID {} //F)",
      "Bash(./nat-supabase.exe)",
      "Bash(taskkill:*)",
      "Bash(tree /F /A cmd internal)",
      "Bash(findstr :8080)",
      "Bash(go build -o nat-supabase-fixed.exe ./cmd)",
      "Bash(xargs -I {} taskkill //F //PID {})",
      "Bash(./nat-supabase-fixed.exe)",
      "Bash(go build -o nat-supabase-userfix.exe ./cmd)",
      "Bash(./nat-supabase-userfix.exe)",
      "Bash(./nat-supabase-ui-improved.exe)",
      "Bash(tree:*)",
      "Bash(./nat-supabase-logs.exe)",
      "Bash(dir /B)",
      "Bash(dir /B /S)",
      "Bash(findstr /V \".exe .git node_modules\")",
      "Bash(findstr /V \".exe node_modules .git\")",
      "Read(//c/Users/MAKAROV/Documents/tools/NAT/nat-management-appV3.1/**)",
      "Bash(go build -o migrate-new.exe run_migration.go)",
      "Bash(test -f .env)",
      "Bash(test -d webautomation/node_modules)",
      "Bash(node --version)",
      "Bash(go build -o nat-ont-integration-test.exe ./cmd)",
      "Bash(go build -o nat-ont-integration.exe ./cmd)",
      "Bash(go build -o nat-wifi-fixed.exe ./cmd)",
      "Bash(go build -o nat-clean-json.exe ./cmd)",
      "Bash(go build -o nat-anti-flicker.exe ./cmd)",
      "Bash(go build -o nat-modal-fix.exe ./cmd)",
      "Bash(go build -o nat-enhanced-cache.exe ./cmd)",
      "Bash(test -f nat-enhanced-cache.exe)",
      "Bash(test -f nat-ont-integration.exe)",
      "Bash(test -f nat-wifi-fixed.exe)",
      "Bash(awk '{print $9, $5}')",
      "Bash(go version)",
      "Bash(go build -o nat-management-v4.1.exe ./cmd)",
      "Bash(test -f nat-management-v4.1.exe)",
      "Bash(go build -o nat-management-v4.2.exe ./cmd)",
      "Bash(test -f nat-management-v4.2.exe)",
      "Bash(go build -o nat-management-v4.2-ratelimit.exe ./cmd)",
      "Bash(go build -o nat-management-v4.2-stable.exe ./cmd)",
      "Bash(go build -o nat-management-test.exe ./cmd)",
      "Bash(go build -o nat-management-v4.2-pooled.exe ./cmd)",
      "Bash(go build -o nat-management-v4.2-phase1.exe ./cmd)",
      "Bash(./migrate-new.exe)",
      "Bash(go run migrations/run_migration.go)",
      "Bash(go run run_single_migration.go)",
      "Bash(go build -o nat-management-v4.2-phase2-task1.exe ./cmd)",
      "Bash(go build -o nat-management-v4.2-phase2-task2.exe ./cmd)",
      "Bash(go build -o nat-management-v4.2-phase2-task3.exe ./cmd)",
      "Bash(dir:*)",
      "Bash(awk:*)",
      "Bash(go build:*)",
      "Bash(./nat-playwright-test.exe:*)",
      "mcp__playwright__browser_navigate",
      "mcp__playwright__browser_type",
      "Bash(./nat-search-v2.exe:*)",
      "Bash(findstr:*)",
      "Bash(./nat-pppoe-optimized.exe:*)",
      "SlashCommand(/init)",
      "mcp__playwright__browser_fill_form",
      "mcp__playwright__browser_click",
      "mcp__playwright__browser_wait_for",
      "mcp__playwright__browser_take_screenshot",
      "Bash(./nat-monitoring-role-fixed.exe)",
      "Bash(test:*)",
      "Bash(./nat-monitoring-ui-improved.exe)",
      "Bash(./nat-pppoe-connections-fixed.exe)",
      "Bash(git init:*)",
      "Bash(git config:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(rm:*)",
      "Bash(git rm:*)",
      "Bash(git push:*)"
    ],
    "deny": [],
    "ask": []
  }
}
